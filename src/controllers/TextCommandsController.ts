import { CONFIG } from '../config';
import { StateType, CategoryType } from '../types';
import { StateManager } from '../services/StateManager';
import { MessageService } from '../services/MessageService';
import { GoogleSheetsService } from '../services/GoogleSheetsService';

export class TextCommandsController {
  private static instance: TextCommandsController;
  private stateManager: StateManager;
  private messageService: MessageService;
  private googleSheetsService: GoogleSheetsService;

  private constructor() {
    this.stateManager = StateManager.getInstance();
    this.messageService = MessageService.getInstance();
    this.googleSheetsService = GoogleSheetsService.getInstance();
  }

  public static getInstance(): TextCommandsController {
    if (!TextCommandsController.instance) {
      TextCommandsController.instance = new TextCommandsController();
    }
    return TextCommandsController.instance;
  }

  public handleTextCommand(message: any): void {
    const chatId = message.chat.id;
    const text = message.text;
    const firstName = message.from.first_name;

    switch (text) {
      case '/start':
        this.messageService.sendText(chatId, `–ü—Ä–∏–≤–µ—Ç, ${firstName}! –Ø –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç –Ω–∞ GAS.`);
        break;

      case '/help':
        this.messageService.sendText(
          chatId,
          '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n/help - —Å–ø—Ä–∞–≤–∫–∞\n/menu - –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é\n/add - –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é\n/addcategory - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
        );
        break;

      case '/menu':
        this.messageService.sendMenu(chatId);
        break;

      case '/add':
        this.handleAddTransaction(chatId, firstName);
        break;

      case '/addcategory':
        this.handleAddCategoryStart(chatId, firstName);
        break;

      case '/testcache':
        this.testCache();
        break;

      default:
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const currentState = this.stateManager.getUserState(chatId);
        this.messageService.sendText(
          Number(CONFIG.ADMIN_ID),
          `üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ${chatId}: ${currentState ? JSON.stringify(currentState) : 'null'}`,
        );

        if (this.stateManager.isUserInState(chatId, StateType.ADDING_CATEGORY_NAME)) {
          this.messageService.sendText(
            Number(CONFIG.ADMIN_ID),
            `‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: "${text}"`,
          );
          this.handleCategoryNameInput(chatId, text);
        } else if (this.stateManager.isUserInState(chatId, StateType.ADDING_CATEGORY_EMOJI)) {
          this.messageService.sendText(
            Number(CONFIG.ADMIN_ID),
            `‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ —ç–º–æ–¥–∑–∏: "${text}"`,
          );
          this.handleCategoryEmojiInput(chatId, text);
        } else {
          this.messageService.sendText(
            Number(CONFIG.ADMIN_ID),
            `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${chatId} –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –¢–µ–∫—Å—Ç: "${text}"`,
          );
          // –≠—Ö–æ-–æ—Ç–≤–µ—Ç
          this.messageService.sendText(chatId, `–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "${text}"`);
        }
    }
  }

  private handleAddTransaction(chatId: number, firstName: string): void {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testDescriptions = [
      '–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤',
      '–û–ø–ª–∞—Ç–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞',
      '–ó–∞–ø—Ä–∞–≤–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
      '–ü–æ–∫—É–ø–∫–∞ –∫–Ω–∏–≥–∏',
      '–û–±–µ–¥ –≤ –∫–∞—Ñ–µ',
      '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
      '–ü–æ–∫—É–ø–∫–∞ –æ–¥–µ–∂–¥—ã',
    ];

    const testCategories = [
      '–ü—Ä–æ–¥—É–∫—Ç—ã',
      '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç',
      '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
      '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
      '–ü–∏—Ç–∞–Ω–∏–µ',
      '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
      '–û–¥–µ–∂–¥–∞',
    ];

    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    // const randomIndex = Math.floor(Math.random() * testDescriptions.length);
    const description = testDescriptions[0];
    const category = testCategories[0];
    const amount = Math.floor(Math.random() * 5000) + 100; // –æ—Ç 100 –¥–æ 5100

    try {
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ Google Sheets
      const result = this.googleSheetsService.addTransaction('sdsds', amount, category);

      if (result.success && result.data) {
        const date = `${result.data?.[0] ?? ''}`;
        const time = `${result.data?.[1] ?? ''}`;
        const message =
          `‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n\n` +
          `üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${description}\n` +
          `üí∞ –°—É–º–º–∞: ${amount} —Ä—É–±.\n` +
          `üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${category}\n` +
          `üìÖ –î–∞—Ç–∞: ${date}\n` +
          `üïê –í—Ä–µ–º—è: ${time}\n` +
          `üìä –°—Ç—Ä–æ–∫–∞: ${result.row || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`;

        this.messageService.sendText(chatId, message);
      } else {
        this.messageService.sendText(
          chatId,
          `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`,
        );
      }
    } catch (error) {
      console.error(
        '‚ùå –û—à–∏–±–∫–∞ –≤ handleAddTransaction:',
        error instanceof Error ? error.message : String(error),
      );
      this.messageService.sendText(
        chatId,
        `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${error instanceof Error ? error.message : String(error)}`,
      );
    }
  }

  private handleAddCategoryStart(chatId: number, firstName: string): void {
    try {
      this.messageService.sendText(
        Number(CONFIG.ADMIN_ID),
        `üöÄ –ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è ${chatId}`,
      );

      // –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π ID –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const nextId = this.googleSheetsService.getNextCategoryId();
      this.messageService.sendText(Number(CONFIG.ADMIN_ID), `üÜî –ü–æ–ª—É—á–µ–Ω ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${nextId}`);

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      this.stateManager.setUserState(chatId, StateType.ADDING_CATEGORY_NAME, {
        categoryId: nextId,
      });

      const message =
        `üìÇ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n\n` +
        `üÜî ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${nextId}\n\n` +
        `üìù –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:`;

      this.messageService.sendText(chatId, message);
      this.messageService.sendText(
        Number(CONFIG.ADMIN_ID),
        `‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}`,
      );
    } catch (error) {
      this.messageService.sendText(
        Number(CONFIG.ADMIN_ID),
        `‚ùå –û—à–∏–±–∫–∞ –≤ handleAddCategoryStart –¥–ª—è ${chatId}: ${error instanceof Error ? error.message : String(error)}`,
      );
      this.messageService.sendText(
        chatId,
        `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${error instanceof Error ? error.message : String(error)}`,
      );
    }
  }

  private handleCategoryNameInput(chatId: number, name: string): void {
    try {
      this.messageService.sendText(
        Number(CONFIG.ADMIN_ID),
        `üìù –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è ${chatId}: "${name}"`,
      );

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º
      this.stateManager.updateUserStateData(chatId, { name: name });

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ (–æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–∏–ø, —Å–æ—Ö—Ä–∞–Ω—è—è –¥–∞–Ω–Ω—ã–µ)
      this.stateManager.updateUserStateType(chatId, StateType.ADDING_CATEGORY_TYPE);

      const message = `‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: "${name}"\n\n` + `üìÇ –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:`;

      this.messageService.sendText(chatId, message);
      this.messageService.sendCategoryTypeKeyboard(chatId);
      this.messageService.sendText(
        Number(CONFIG.ADMIN_ID),
        `‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ç–∏–ø–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}`,
      );
    } catch (error) {
      this.messageService.sendText(
        Number(CONFIG.ADMIN_ID),
        `‚ùå –û—à–∏–±–∫–∞ –≤ handleCategoryNameInput –¥–ª—è ${chatId}: ${error instanceof Error ? error.message : String(error)}`,
      );
      this.messageService.sendText(
        chatId,
        `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–∑–≤–∞–Ω–∏—è: ${error instanceof Error ? error.message : String(error)}`,
      );
    }
  }

  private handleCategoryEmojiInput(chatId: number, emoji: string): void {
    try {
      const state = this.stateManager.getUserState(chatId);
      if (!state) {
        this.messageService.sendText(
          chatId,
          '‚ùå –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /addcategory',
        );
        return;
      }

      const { categoryId, name, type } = state.data;

      // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ Google Sheets
      const result = this.googleSheetsService.addCategory(categoryId, name, type, emoji);

      if (result.success) {
        const typeNames: Record<string, string> = {
          [CategoryType.INCOME]: '–î–æ—Ö–æ–¥',
          [CategoryType.EXPENSE]: '–†–∞—Å—Ö–æ–¥',
          [CategoryType.TRANSFER]: '–ü–µ—Ä–µ–≤–æ–¥',
        };

        const message =
          `‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n\n` +
          `üÜî ID: ${categoryId}\n` +
          `üìù –ù–∞–∑–≤–∞–Ω–∏–µ: ${name}\n` +
          `üìÇ –¢–∏–ø: ${typeNames[type as string] || type}\n` +
          `üòä –≠–º–æ–¥–∑–∏: ${emoji}\n` +
          `üìä –°—Ç—Ä–æ–∫–∞: ${result.row || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`;

        this.messageService.sendText(chatId, message);
      } else {
        this.messageService.sendText(
          chatId,
          `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`,
        );
      }

      // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      this.stateManager.clearUserState(chatId);
    } catch (error) {
      console.error(
        '‚ùå –û—à–∏–±–∫–∞ –≤ handleCategoryEmojiInput:',
        error instanceof Error ? error.message : String(error),
      );
      this.messageService.sendText(
        chatId,
        `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${error instanceof Error ? error.message : String(error)}`,
      );
      this.stateManager.clearUserState(chatId);
    }
  }

  private testCache(): void {
    try {
      this.messageService.sendText(Number(CONFIG.ADMIN_ID), 'üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –∫—ç—à–∞');

      const cache = CacheService.getScriptCache();
      const testKey = 'test_key';
      const testValue = 'test_value';

      this.messageService.sendText(
        Number(CONFIG.ADMIN_ID),
        `üß™ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: ${testKey} = ${testValue}`,
      );
      cache.put(testKey, testValue, 3600);

      const retrievedValue = cache.get(testKey);
      this.messageService.sendText(
        Number(CONFIG.ADMIN_ID),
        `üß™ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${retrievedValue}`,
      );

      if (retrievedValue === testValue) {
        this.messageService.sendText(Number(CONFIG.ADMIN_ID), '‚úÖ –¢–µ—Å—Ç –∫—ç—à–∞ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!');
      } else {
        this.messageService.sendText(Number(CONFIG.ADMIN_ID), '‚ùå –¢–µ—Å—Ç –∫—ç—à–∞ –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è!');
      }

      // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      cache.remove(testKey);
    } catch (error) {
      this.messageService.sendText(
        Number(CONFIG.ADMIN_ID),
        `‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∫—ç—à–∞: ${error instanceof Error ? error.message : String(error)}`,
      );
    }
  }
}
